// !!!DO NOT EDIT THIS FILE BY HAND!!!
// Create this file by running MethodGen.exe in the rhinocommon directory
// MethodGen.exe parses the cpp files in rhcommon_c to create C# callable
// function declarations

using System;
using System.Runtime.InteropServices;
using Rhino;
using Rhino.Geometry;
using Rhino.Geometry.Intersect;
using Rhino.Collections;
using Rhino.Display;
using Rhino.Runtime.InteropWrappers;

// Atuomatically generated function declarations for calling into
// the support 'C' DLL (rhcommon_c.dll).
internal partial class UnsafeNativeMethods
{
  #region rdk_color.cpp
  //unsigned int Rdk_ColorBlend(float t, unsigned int from_argb, unsigned int to_argb)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern uint Rdk_ColorBlend(float t, uint from_argb, uint to_argb);
  #endregion


  #region rdk_content.cpp
  //void Rdk_SetContentStringCallback(RDK_GETCONTENTSTRINGPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetAddUISectionsCallback(RDK_ADDUISECTIONSPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetGetDefaultsFromUserCallback(RDK_GETDEFAULTSFROMUSERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetRenderContentDeleteThisCallback(RDK_RENDERCONTENTDELETETHISPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetRenderContentBitFlagsCallback(RDK_RENDERCONTENTBITFLAGSPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetIsContentTypeAcceptableAsChildCallback(RDK_ISCONTENTTYPEACCEPTABLEASCHILDPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetHarvestDataCallback(RDK_HARVESTDATAPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetGetShaderCallback(RDK_GETSHADERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetGetParameterCallback(RDK_GETPARAMETERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetGetExtraRequirementParameterCallback(RDK_GETEXTRAREQUIREMENTPARAMETERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetSetParameterCallback(RDK_SETPARAMETERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetSetExtraRequirementParameterCallback(RDK_SETEXTRAREQUIREMENTPARAMETERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetGetContentIconCallback(RDK_GETCONTENTVIRTUALHCIONPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //HICON Rdk_RenderContent_GetVirtualIcon(const CRhRdkContent* content, int width, int height, bool fromBaseClass)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_GetVirtualIcon(IntPtr content, int width, int height, [MarshalAs(UnmanagedType.U1)]bool fromBaseClass);

  //void Rdk_CallAddUISectionsBase(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CallAddUISectionsBase(IntPtr pContent);

  //bool Rdk_CallGetDefaultsFromUserBase(CRhRdkContent* pContent, HWND hWndParent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CallGetDefaultsFromUserBase(IntPtr pContent, IntPtr hWndParent);

  //void Rdk_AddUISections(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_AddUISections(IntPtr pContent);

  //bool Rdk_GetDefaultsFromUser(CRhRdkContent* pContent, HWND hWndParent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_GetDefaultsFromUser(IntPtr pContent, IntPtr hWndParent);

  //CRhRdkSubNodeCtrl* CRhRdkSubNodeCtrl_Create(HWND hwndParent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhRdkSubNodeCtrl_Create(IntPtr hwndParent);

  //void CRhRdkSubNodeCtrl_SetBackgroundColor(CRhRdkSubNodeCtrl* nodeControl, int argb)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetBackgroundColor(IntPtr nodeControl, int argb);

  //int CRhRdkSubNodeCtrl_GetParentControlColor(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhRdkSubNodeCtrl_GetParentControlColor(IntPtr nodeControl);

  //HBRUSH CRhRdkSubNodeCtrl_GetBackgroundBrush(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhRdkSubNodeCtrl_GetBackgroundBrush(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetControlFont(CRhRdkSubNodeCtrl* nodeControl, HFONT hFont)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetControlFont(IntPtr nodeControl, IntPtr hFont);

  //HFONT CRhRdkSubNodeCtrl_GetControlFont(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhRdkSubNodeCtrl_GetControlFont(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_Redraw(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_Redraw(IntPtr nodeControl);

  //HWND CRhRdkSubNodeCtrl_GetWindowHandle(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhRdkSubNodeCtrl_GetWindowHandle(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_Delete(CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_Delete(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_OnSizeChanged(CRhRdkSubNodeCtrl* nodeControl, int width, int height)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_OnSizeChanged(IntPtr nodeControl, int width, int height);

  //bool CRhRdkSubNodeCtrl_SetParentInstanceId(CRhRdkSubNodeCtrl* nodeControl, ON_UUID parent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_SetParentInstanceId(IntPtr nodeControl, Guid parent);

  //ON_UUID CRhRdkSubNodeCtrl_ParentInstanceId(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid CRhRdkSubNodeCtrl_ParentInstanceId(IntPtr nodeControl);

  //bool CRhRdkSubNodeCtrl_SetParentInstanceIdList(CRhRdkSubNodeCtrl* nodeControl, int count, /*ARRAY*/ const ON_UUID* uuids)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_SetParentInstanceIdList(IntPtr nodeControl, int count, Guid[] uuids);

  //bool CRhRdkSubNodeCtrl_SetChildSlotName(CRhRdkSubNodeCtrl* nodeControl, const RHMONO_STRING* _string)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_SetChildSlotName(IntPtr nodeControl, [MarshalAs(UnmanagedType.LPWStr)]string _string);

  //bool CRhRdkSubNodeCtrl_ChildSlotName(const CRhRdkSubNodeCtrl* nodeControl, CRhCmnStringHolder* stringHodler)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_ChildSlotName(IntPtr nodeControl, IntPtr stringHodler);

  //bool CRhRdkSubNodeCtrl_Varies(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_Varies(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_ShowCheck(CRhRdkSubNodeCtrl* nodeControl, bool value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_ShowCheck(IntPtr nodeControl, [MarshalAs(UnmanagedType.U1)]bool value);

  //int CRhRdkSubNodeCtrl_GetCheck(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhRdkSubNodeCtrl_GetCheck(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetCheck(CRhRdkSubNodeCtrl* nodeControl, int value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetCheck(IntPtr nodeControl, int value);

  //bool CRhRdkSubNodeCtrl_CheckEnabled(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_CheckEnabled(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetCheckEnabled(CRhRdkSubNodeCtrl* nodeControl, bool value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetCheckEnabled(IntPtr nodeControl, [MarshalAs(UnmanagedType.U1)]bool value);

  //void CRhRdkSubNodeCtrl_ShowAmount(CRhRdkSubNodeCtrl* nodeControl, bool value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_ShowAmount(IntPtr nodeControl, [MarshalAs(UnmanagedType.U1)]bool value);

  //double CRhRdkSubNodeCtrl_GetAmount(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double CRhRdkSubNodeCtrl_GetAmount(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetAmount(CRhRdkSubNodeCtrl* nodeControl, double value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetAmount(IntPtr nodeControl, double value);

  //void CRhRdkSubNodeCtrl_SetAmountBounds(CRhRdkSubNodeCtrl* nodeControl, double dMin, double dMax)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetAmountBounds(IntPtr nodeControl, double dMin, double dMax);

  //bool CRhRdkSubNodeCtrl_AmountVaries(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_AmountVaries(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetAmountVaries(CRhRdkSubNodeCtrl* nodeControl, bool value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetAmountVaries(IntPtr nodeControl, [MarshalAs(UnmanagedType.U1)]bool value);

  //bool CRhRdkSubNodeCtrl_AmountEnabled(const CRhRdkSubNodeCtrl* nodeControl)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool CRhRdkSubNodeCtrl_AmountEnabled(IntPtr nodeControl);

  //void CRhRdkSubNodeCtrl_SetAmountEnabled(CRhRdkSubNodeCtrl* nodeControl, bool value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhRdkSubNodeCtrl_SetAmountEnabled(IntPtr nodeControl, [MarshalAs(UnmanagedType.U1)]bool value);

  //void* Rdk_RenderContent_GetShader(const CRhRdkContent* pContent, ON_UUID renderEngineId, void* pvData)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_GetShader(IntPtr pContent, Guid renderEngineId, IntPtr pvData);

  //int Rdk_RenderContent_CallHarvestDataBase(CRhRdkContent* pContent, const CRhRdkContent* pOldContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallHarvestDataBase(IntPtr pContent, IntPtr pOldContent);

  //int Rdk_RenderContent_HarvestData(CRhRdkContent* pContent, const CRhRdkContent* pOldContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_HarvestData(IntPtr pContent, IntPtr pOldContent);

  //int Rdk_RenderContent_CallIsContentTypeAcceptableAsChildBase(const CRhRdkContent* pContent, ON_UUID uuidType, RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallIsContentTypeAcceptableAsChildBase(IntPtr pContent, Guid uuidType, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //int Rdk_RenderContent_IsContentTypeAcceptableAsChild(const CRhRdkContent* pContent, ON_UUID uuidType, RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsContentTypeAcceptableAsChild(IntPtr pContent, Guid uuidType, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //int CRhCmnRenderContent_IsRhCmnDefined(const CRhRdkContent* pRenderContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnRenderContent_IsRhCmnDefined(IntPtr pRenderContent);

  //void Rdk_RenderContent_DeleteThis(CRhRdkContent* pRenderContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_DeleteThis(IntPtr pRenderContent);

  //int Rdk_RenderContent_FieldCount(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_FieldCount(IntPtr pContent);

  //CRhRdkContentField* Rdk_RenderContent_Field(CRhRdkContent* pContent, int index)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_Field(IntPtr pContent, int index);

  //CRhRdkContentField* Rdk_RenderContent_FindField(CRhRdkContent* pContent, const RHMONO_STRING* _fieldName)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_FindField(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _fieldName);

  //void Rdk_RenderContent_ChildSlotNameFromParamName(CRhRdkContent* pContent, const RHMONO_STRING* _sParamName, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_ChildSlotNameFromParamName(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _sParamName, IntPtr pSH);

  //void Rdk_RenderContent_ParamNameFromChildSlotName(CRhRdkContent* pContent, const RHMONO_STRING* _sChildSlotName, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_ParamNameFromChildSlotName(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _sChildSlotName, IntPtr pSH);

  //CRhRdkContent* Rdk_RenderContent_FindChild(CRhRdkContent* pContent, const RHMONO_STRING* _sChildSlotName)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_FindChild(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _sChildSlotName);

  //bool Rdk_RenderContent_ChangeChild(CRhRdkContent* pParentContent, CRhRdkContent* pOldChild, CRhRdkContent* pNewChild )
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderContent_ChangeChild(IntPtr pParentContent, IntPtr pOldChild, IntPtr pNewChild);

  //bool Rdk_RenderContent_AddChild(CRhRdkContent* pParentContent, CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderContent_AddChild(IntPtr pParentContent, IntPtr pContent);

  //void Rdk_RenderContent_SetChildSlotName(CRhRdkContent* pContent, const RHMONO_STRING* _sChildSlotName)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetChildSlotName(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _sChildSlotName);

  //int Rdk_RenderContent_IsTopLevel(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsTopLevel(IntPtr pContent);

  //int Rdk_RenderContent_IsInDocument(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsInDocument(IntPtr pContent);

  //int Rdk_RenderContent_IsHidden(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsHidden(IntPtr pContent);

  //int Rdk_RenderContent_IsCurrent(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsCurrent(IntPtr pContent);

  //void Rdk_RenderContent_SetIsHidden(CRhRdkContent* pContent, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetIsHidden(IntPtr pContent, [MarshalAs(UnmanagedType.U1)]bool b);

  //int Rdk_RenderContent_IsKind(CRhRdkContent* pContent, const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsKind(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //CRhRdkContent* Rdk_RenderContent_TopLevelParent(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_TopLevelParent(IntPtr pContent);

  //CRhRdkTexture* Rdk_RenderContent_DynamicCastToTexture(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_DynamicCastToTexture(IntPtr pContent);

  //CRhRdkEnvironment* Rdk_RenderContent_DynamicCastToEnvironment(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_DynamicCastToEnvironment(IntPtr pContent);

  //CRhRdkMaterial* Rdk_RenderContent_DynamicCastToMaterial(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_DynamicCastToMaterial(IntPtr pContent);

  //int Rdk_RenderContent_ReadFromXml(CRhRdkContent* pContent, const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_ReadFromXml(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //void Rdk_RenderContent_GetString(const CRhRdkContent* pConstContent, CRhCmnStringHolder* pSH, int which)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_GetString(IntPtr pConstContent, IntPtr pSH, int which);

  //void Rdk_RenderContent_SetInstanceName(CRhRdkContent* pContent, const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetInstanceName(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //void Rdk_RenderContent_SetNotes(CRhRdkContent* pContent, const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetNotes(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //ON_UUID Rdk_RenderContent_InstanceId(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_RenderContent_InstanceId(IntPtr pContent);

  //void Rdk_RenderContent_SetInstanceId(CRhRdkContent* pContent, ON_UUID uuid)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetInstanceId(IntPtr pContent, Guid uuid);

  //CRhRdkContent* Rdk_FindContentInstance(ON_UUID instanceId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_FindContentInstance(Guid instanceId);

  //CRhRdkContent* Rdk_FindRhCmnContentPointer(int serial_number, int* search_hint)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_FindRhCmnContentPointer(int serial_number, ref int search_hint);

  //int Rdk_RenderContent_GetVariantParameter(const CRhRdkContent* pContent, const RHMONO_STRING* _ps, CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_GetVariantParameter(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pV);

  //int Rdk_RenderContent_CallGetVariantParameterBase(const CRhRdkContent* pContent, const RHMONO_STRING* _ps, CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallGetVariantParameterBase(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pV);

  //int Rdk_RenderContent_SetVariantParameter(CRhRdkContent* pContent, const RHMONO_STRING* _ps, const CRhRdkVariant* pV, int cc)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_SetVariantParameter(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pV, int cc);

  //int Rdk_RenderContent_CallSetVariantParameterBase(CRhRdkContent* pContent, const RHMONO_STRING* _ps, const CRhRdkVariant* pV, int cc)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallSetVariantParameterBase(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pV, int cc);

  //int Rdk_RenderContent_GetExtraRequirementParameter(const CRhRdkContent* pContent, const RHMONO_STRING* _psParam, const RHMONO_STRING* _psName, CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_GetExtraRequirementParameter(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _psParam, [MarshalAs(UnmanagedType.LPWStr)]string _psName, IntPtr pV);

  //int Rdk_RenderContent_CallGetExtraRequirementParameterBase(const CRhRdkContent* pContent, const RHMONO_STRING* _psParam, const RHMONO_STRING* _psName, CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallGetExtraRequirementParameterBase(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _psParam, [MarshalAs(UnmanagedType.LPWStr)]string _psName, IntPtr pV);

  //int Rdk_RenderContent_SetExtraRequirementParameter(CRhRdkContent* pContent, const RHMONO_STRING* _psParam, const RHMONO_STRING* _psName, const CRhRdkVariant* pV, int sc)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_SetExtraRequirementParameter(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _psParam, [MarshalAs(UnmanagedType.LPWStr)]string _psName, IntPtr pV, int sc);

  //int Rdk_RenderContent_CallSetExtraRequirementParameterBase(CRhRdkContent* pContent, const RHMONO_STRING* _psParam, const RHMONO_STRING* _psName, const CRhRdkVariant* pV, int sc)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_CallSetExtraRequirementParameterBase(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _psParam, [MarshalAs(UnmanagedType.LPWStr)]string _psName, IntPtr pV, int sc);

  //ON_UUID Rdk_RenderContent_ObjectMaterialInstanceId(const CRhinoObject* pObject)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_RenderContent_ObjectMaterialInstanceId(IntPtr pObject);

  //int Rdk_RenderContent_SetObjectMaterialInstanceid(CRhinoObject* pObject, ON_UUID uuidInstanceId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_SetObjectMaterialInstanceid(IntPtr pObject, Guid uuidInstanceId);

  //ON_UUID Rdk_RenderContent_LayerMaterialInstanceId(unsigned int documentId, ON_Layer* pLayer)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_RenderContent_LayerMaterialInstanceId(uint documentId, IntPtr pLayer);

  //void Rdk_RenderContent_SetLayerMaterialInstanceId(unsigned int documentId, int layerIndex, ON_UUID uuid)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderContent_SetLayerMaterialInstanceId(uint documentId, int layerIndex, Guid uuid);

  //int Rdk_RenderContent_IsCompatible(const CRhRdkContent* pContent, ON_UUID uuidRenderEngine)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderContent_IsCompatible(IntPtr pContent, Guid uuidRenderEngine);

  //void Rdk_SetRenderContentIoDeleteThisCallback(RDK_RENDERCONTENTIO_DELETETHISPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetRenderContentIoLoadCallback(RDK_RENDERCONTENTIO_LOADPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetRenderContentIoSaveCallback(RDK_RENDERCONTENTIO_SAVEPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetRenderContentIoStringCallback(RDK_GETCONTENTIO_STRINGPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //int CRhCmnContentIOPlugIn_New(int serial_number, const RHMONO_STRING* _ext, const RHMONO_STRING* _description, int kind, bool bSave, bool bLoad, ON_UUID pluginId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnContentIOPlugIn_New(int serial_number, [MarshalAs(UnmanagedType.LPWStr)]string _ext, [MarshalAs(UnmanagedType.LPWStr)]string _description, int kind, [MarshalAs(UnmanagedType.U1)]bool bSave, [MarshalAs(UnmanagedType.U1)]bool bLoad, Guid pluginId);

  //bool Rdk_RenderContentIo_IsExtensionRegistered(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderContentIo_IsExtensionRegistered([MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //bool Rdk_RenderContent_OpenInThumbnailEditor(CRhRdkContent* pContent, bool bModal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderContent_OpenInThumbnailEditor(IntPtr pContent, [MarshalAs(UnmanagedType.U1)]bool bModal);
  #endregion


  #region rdk_contentfactory.cpp
  //ON_UUID Rdk_Factories_GetTypeIdAtIndex(int iIndex)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Factories_GetTypeIdAtIndex(int iIndex);

  //void Rdk_Factory_Kind(const IRhRdkContentFactory* pFactory, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Factory_Kind(IntPtr pFactory, IntPtr pSH);

  //ON_UUID Rdk_Factory_TypeId(const IRhRdkContentFactory* pFactory)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Factory_TypeId(IntPtr pFactory);

  //void Rdk_Factory_InternalName(const IRhRdkContentFactory* pFactory, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Factory_InternalName(IntPtr pFactory, IntPtr pSH);

  //ON_UUID Rdk_Factory_RenderEngineId(const IRhRdkContentFactory* pFactory)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Factory_RenderEngineId(IntPtr pFactory);

  //ON_UUID Rdk_Factory_PlugInId(const IRhRdkContentFactory* pFactory)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Factory_PlugInId(IntPtr pFactory);

  //IRhRdkContentFactory* Rdk_Factories_ConstPointerFromTypeId(ON_UUID typeId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Factories_ConstPointerFromTypeId(Guid typeId);

  //CRhRdkContent* Rdk_Factory_NewContent(const IRhRdkContentFactory* pFactory)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Factory_NewContent(IntPtr pFactory);
  #endregion


  #region rdk_contentfield.cpp
  //CRhRdkContentField* Rdk_ContentField_New(CRhRdkContent* pParent, const RHMONO_STRING* _pInternal, const RHMONO_STRING* _pFriendly, int iId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentField_New(IntPtr pParent, [MarshalAs(UnmanagedType.LPWStr)]string _pInternal, [MarshalAs(UnmanagedType.LPWStr)]string _pFriendly, int iId);

  //int Rdk_ContentField_IsTextured(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentField_IsTextured(IntPtr pField);

  //void Rdk_ContentField_SetIsTextured(CRhRdkContentField* pField, int bIsTextured)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetIsTextured(IntPtr pField, int bIsTextured);

  //const CRhRdkVariant* Rdk_ContentField_Value(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentField_Value(IntPtr pField);

  //void Rdk_ContentField_InternalName(CRhRdkContentField* pField, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_InternalName(IntPtr pField, IntPtr pSH);

  //void Rdk_ContentField_FriendlyName(CRhRdkContentField* pField, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_FriendlyName(IntPtr pField, IntPtr pSH);

  //void Rdk_ContentField_Delete(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_Delete(IntPtr pField);

  //void Rdk_ContentField_StringValue(CRhRdkContentField* pField, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_StringValue(IntPtr pField, IntPtr pSH);

  //void Rdk_ContentField_SetStringValue(CRhRdkContentField* pField, const RHMONO_STRING* _pValue, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetStringValue(IntPtr pField, [MarshalAs(UnmanagedType.LPWStr)]string _pValue, int iCC);

  //void Rdk_ContentField_SetByteArrayValue(CRhRdkContentField* pField, /*ARRAY*/const char* buffer, int sizeOfBuffer, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetByteArrayValue(IntPtr pField, byte[] buffer, int sizeOfBuffer, int iCC);

  //int Rdk_ContentField_GetByteArrayValueSize(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentField_GetByteArrayValueSize(IntPtr pField);

  //bool Rdk_ContentField_GetByteArrayValue(CRhRdkContentField* pField, /*ARRAY*/char* buffer, int sizeOfBuffer)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_ContentField_GetByteArrayValue(IntPtr pField, [In,Out] byte[] buffer, int sizeOfBuffer);

  //int Rdk_ContentField_SetVariantParameter(CRhRdkContentField* pField, const CRhRdkVariant* pV, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentField_SetVariantParameter(IntPtr pField, IntPtr pV, int iCC);

  //int Rdk_ContentField_BoolValue(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentField_BoolValue(IntPtr pField);

  //void Rdk_ContentField_SetBoolValue(CRhRdkContentField* pField, int iBool, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetBoolValue(IntPtr pField, int iBool, int iCC);

  //int Rdk_ContentField_IntValue(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentField_IntValue(IntPtr pField);

  //void Rdk_ContentField_SetIntValue(CRhRdkContentField* pField, int i, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetIntValue(IntPtr pField, int i, int iCC);

  //double Rdk_ContentField_DoubleValue(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_ContentField_DoubleValue(IntPtr pField);

  //void Rdk_ContentField_SetDoubleValue(CRhRdkContentField* pField, double d, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetDoubleValue(IntPtr pField, double d, int iCC);

  //float Rdk_ContentField_FloatValue(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern float Rdk_ContentField_FloatValue(IntPtr pField);

  //void Rdk_ContentField_SetFloatValue(CRhRdkContentField* pField, float f, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetFloatValue(IntPtr pField, float f, int iCC);

  //ON_UUID Rdk_ContentField_UUIDValue(CRhRdkContentField* pField)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_ContentField_UUIDValue(IntPtr pField);

  //void Rdk_ContentField_SetUUIDValue(CRhRdkContentField* pField, ON_UUID v, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetUUIDValue(IntPtr pField, Guid v, int iCC);

  //void Rdk_ContentField_ColorValue(CRhRdkContentField* pField, ON_4fPoint* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_ColorValue(IntPtr pField, ref Color4f p);

  //void Rdk_ContentField_SetColorValue(CRhRdkContentField* pField, ON_4FVECTOR_STRUCT v, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetColorValue(IntPtr pField, Color4f v, int iCC);

  //void Rdk_ContentField_Vector2dValue(CRhRdkContentField* pField, ON_2dVector* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_Vector2dValue(IntPtr pField, ref Vector2d p);

  //void Rdk_ContentField_SetVector2dValue(CRhRdkContentField* pField, ON_2DVECTOR_STRUCT v, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetVector2dValue(IntPtr pField, Vector2d v, int iCC);

  //void Rdk_ContentField_Vector3dValue(CRhRdkContentField* pField, ON_3dVector* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_Vector3dValue(IntPtr pField, ref Vector3d p);

  //void Rdk_ContentField_SetVector3dValue(CRhRdkContentField* pField, ON_3DVECTOR_STRUCT v, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetVector3dValue(IntPtr pField, Vector3d v, int iCC);

  //void Rdk_ContentField_Point4dValue(CRhRdkContentField* pField, ON_4dPoint* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_Point4dValue(IntPtr pField, ref Point4d p);

  //void Rdk_ContentField_SetPoint4dValue(CRhRdkContentField* pField, ON_4DPOINT_STRUCT v, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetPoint4dValue(IntPtr pField, Point4d v, int iCC);

  //void Rdk_ContentField_XformValue(CRhRdkContentField* pField, ON_Xform* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_XformValue(IntPtr pField, ref Transform p);

  //void Rdk_ContentField_SetXformValue(CRhRdkContentField* pField, ON_XFORM_STRUCT xform, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetXformValue(IntPtr pField, Transform xform, int iCC);

  //void Rdk_ContentField_TimeValue(  CRhRdkContentField* pField, 
  //												int* piYearOut, int* piMonthOut, int* piDayOut, 
  //												int* piHoursOut, int* piMinutesOut, int* piSecondsOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_TimeValue(IntPtr pField, ref int piYearOut, ref int piMonthOut, ref int piDayOut, ref int piHoursOut, ref int piMinutesOut, ref int piSecondsOut);

  //void Rdk_ContentField_SetTimeValue(CRhRdkContentField* pField, 
  //											int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds, int iCC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentField_SetTimeValue(IntPtr pField, int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds, int iCC);
  #endregion


  #region rdk_contentkindlist.cpp
  //int Rdk_ContentList_Count(const IRhRdkContentList* pList)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentList_Count(IntPtr pList);

  //ON_UUID Rdk_ContentList_Uuid(const IRhRdkContentList* pList)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_ContentList_Uuid(IntPtr pList);

  //CRhRdkContent* Rdk_ContentList_FindInstance(const IRhRdkContentList* pList, ON_UUID instanceId, bool bRecurse)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentList_FindInstance(IntPtr pList, Guid instanceId, [MarshalAs(UnmanagedType.U1)]bool bRecurse);

  //IRhRdkContentList::Iterator* Rdk_ContentLists_NewIterator(const IRhRdkContentList* pList)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentLists_NewIterator(IntPtr pList);

  //void Rdk_ContentLists_DeleteIterator(IRhRdkContentList::Iterator* pIterator)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentLists_DeleteIterator(IntPtr pIterator);

  //CRhRdkContent* Rdk_ContentLists_Next(IRhRdkContentList::Iterator* pIterator)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentLists_Next(IntPtr pIterator);

  //const IRhRdkContentList* Rdk_ContentList_ListFromKind(const RHMONO_STRING* _ps, int doc_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentList_ListFromKind([MarshalAs(UnmanagedType.LPWStr)]string _ps, int doc_id);
  #endregion


  #region rdk_contentundo.cpp
  //CRhRdkContentUndo* Rdk_ContentUndo_New(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentUndo_New([MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //CRhRdkContentUndoBlocker* Rdk_ContentUndo_NewBlocker()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_ContentUndo_NewBlocker();

  //int Rdk_ContentUndo_AddContent(CRhRdkContentUndo* pUndo, CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentUndo_AddContent(IntPtr pUndo, IntPtr pContent);

  //int Rdk_ContentUndo_ModifyContent(CRhRdkContentUndo* pUndo, CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentUndo_ModifyContent(IntPtr pUndo, IntPtr pContent);

  //int Rdk_ContentUndo_TweakContent(CRhRdkContentUndo* pUndo, CRhRdkContent* pContent, const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentUndo_TweakContent(IntPtr pUndo, IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //void Rdk_ContentUndo_Delete(CRhRdkContentUndo* pUndo)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentUndo_Delete(IntPtr pUndo);

  //void Rdk_ContentUndo_DeleteBlocker(CRhRdkContentUndoBlocker* pUndoBlocker)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_ContentUndo_DeleteBlocker(IntPtr pUndoBlocker);
  #endregion


  #region rdk_corecontent.cpp
  //int Rdk_CoreContent_AddNewContentUiSection(int type, CRhRdkContent* pContent, ON_UUID classId, const RHMONO_STRING* _pCaption, HWND hWnd, bool createExpanded, bool createVisible)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_CoreContent_AddNewContentUiSection(int type, IntPtr pContent, Guid classId, [MarshalAs(UnmanagedType.LPWStr)]string _pCaption, IntPtr hWnd, [MarshalAs(UnmanagedType.U1)]bool createExpanded, [MarshalAs(UnmanagedType.U1)]bool createVisible);

  //CRhRdkContentUISection* Rdk_CoreContent_AddFindContentUISectionPointer(int serialNumber, int* pSearchHint)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CoreContent_AddFindContentUISectionPointer(int serialNumber, ref int pSearchHint);

  //void Rdk_ContentUiSectionSetCallbacks( RDK_RHCMN_RENDERCONTENTSECTIONPROC deleteThisProc
  //                                                    ,RDK_RHCMN_RENDERCONTENTSECTIONPROC displayDataProc
  //                                                    ,RDK_RHCMN_RENDERCONTENTSECTIONBOOLPROC onExpandProc
  //                                                   )
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //int Rdk_ContentUiBackgroundColor()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_ContentUiBackgroundColor();

  //bool Rdk_CoreContent_AddAutomaticUISection(CRhRdkContent* pContent, const RHMONO_STRING* _pCaption, int iId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CoreContent_AddAutomaticUISection(IntPtr pContent, [MarshalAs(UnmanagedType.LPWStr)]string _pCaption, int iId);

  //CRhRdkContent* Rdk_CoreContent_RenderContentFromUISection(int serialNumber, int* pSearchHint)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CoreContent_RenderContentFromUISection(int serialNumber, ref int pSearchHint);

  //int Rdk_CoreContent_UiSectionConentIdList(int serialNumber, int* pSearchHint, ON_SimpleArray<ON_UUID>* pArrayUuids)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_CoreContent_UiSectionConentIdList(int serialNumber, ref int pSearchHint, IntPtr pArrayUuids);

  //void Rdk_CoreContent_UiSectionShow(int serialNumber, int* pSearchHint, bool show)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CoreContent_UiSectionShow(int serialNumber, ref int pSearchHint, [MarshalAs(UnmanagedType.U1)]bool show);

  //void Rdk_CoreContent_UiSectionExpand(int serialNumber, int* pSearchHint, bool expand)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CoreContent_UiSectionExpand(int serialNumber, ref int pSearchHint, [MarshalAs(UnmanagedType.U1)]bool expand);

  //int Rdk_CoreContent_UiSectionConentSiblingList(int serialNumber, int* pSearchHint, ON_SimpleArray<int>* pArraySerialNumbers)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_CoreContent_UiSectionConentSiblingList(int serialNumber, ref int pSearchHint, IntPtr pArraySerialNumbers);
  #endregion


  #region rdk_customrendermeshmanager.cpp
  //IRhRdkCustomRenderMeshes* Rdk_CustomMeshes_New(const CRhinoObject* pObject)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CustomMeshes_New(IntPtr pObject);

  //ON_UUID Rdk_CustomMeshes_ProviderId(const IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_CustomMeshes_ProviderId(IntPtr pMeshes);

  //void Rdk_CustomMeshes_SetProviderId(IRhRdkCustomRenderMeshes* pMeshes, ON_UUID uuid)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_SetProviderId(IntPtr pMeshes, Guid uuid);

  //void Rdk_CustomMeshes_AddMesh(IRhRdkCustomRenderMeshes* pMeshes, const ON_Mesh* pMesh, const CRhRdkMaterial* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_AddMesh(IntPtr pMeshes, IntPtr pMesh, IntPtr pMaterial);

  //void Rdk_CustomMeshes_AddSphere(IRhRdkCustomRenderMeshes* pMeshes, 
  //											  ON_3DPOINT_STRUCT center, 
  //											  ON_3DVECTOR_STRUCT xaxis, 
  //											  ON_3DVECTOR_STRUCT yaxis, 
  //											  double radius, 
  //											  const CRhRdkMaterial* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_AddSphere(IntPtr pMeshes, Point3d center, Vector3d xaxis, Vector3d yaxis, double radius, IntPtr pMaterial);

  //void Rdk_CustomMeshes_AddCone(IRhRdkCustomRenderMeshes* pMeshes, ON_3DPOINT_STRUCT coneBasePoint, 
  //                                            ON_3DVECTOR_STRUCT conePlaneXAxis, 
  //                                            ON_3DVECTOR_STRUCT conePlaneYAxis, 
  //                                            double coneHeight, double coneRadius,
  //                                            ON_3DPOINT_STRUCT truncationOrigin, 
  //                                            ON_3DVECTOR_STRUCT truncationXAxis, 
  //                                            ON_3DVECTOR_STRUCT truncationYAxis, 
  //                                            const CRhRdkMaterial* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_AddCone(IntPtr pMeshes, Point3d coneBasePoint, Vector3d conePlaneXAxis, Vector3d conePlaneYAxis, double coneHeight, double coneRadius, Point3d truncationOrigin, Vector3d truncationXAxis, Vector3d truncationYAxis, IntPtr pMaterial);

  //void Rdk_CustomMeshes_AddPlane(IRhRdkCustomRenderMeshes* pMeshes, const ON_PlaneSurface* pPlane, const CRhRdkMaterial* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_AddPlane(IntPtr pMeshes, IntPtr pPlane, IntPtr pMaterial);

  //void Rdk_CustomMeshes_AddBox(IRhRdkCustomRenderMeshes* pMeshes, 
  //                                            ON_3DPOINT_STRUCT boxPlaneOrigin, 
  //                                            ON_3DVECTOR_STRUCT boxPlaneXAxis, 
  //                                            ON_3DVECTOR_STRUCT boxPlaneYAxis, 
  //                                            double boxXMin, double boxXMax, 
  //                                            double boxYMin, double boxYMax, 
  //                                            double boxZMin, double boxZMax, 
  //                                            const CRhRdkMaterial* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_AddBox(IntPtr pMeshes, Point3d boxPlaneOrigin, Vector3d boxPlaneXAxis, Vector3d boxPlaneYAxis, double boxXMin, double boxXMax, double boxYMin, double boxYMax, double boxZMin, double boxZMax, IntPtr pMaterial);

  //int Rdk_CustomMeshes_Count(const IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_CustomMeshes_Count(IntPtr pMeshes);

  //bool Rdk_CustomMeshes_UseObjectsMappingChannels(const IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_UseObjectsMappingChannels(IntPtr pMeshes);

  //void Rdk_CustomMeshes_SetUseObjectsMappingChannels(IRhRdkCustomRenderMeshes* pMeshes, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_SetUseObjectsMappingChannels(IntPtr pMeshes, [MarshalAs(UnmanagedType.U1)]bool b);

  //int Rdk_CustomMeshes_PrimitiveType(const IRhRdkCustomRenderMeshes* pMeshes, int index)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_CustomMeshes_PrimitiveType(IntPtr pMeshes, int index);

  //const ON_Mesh* Rdk_CustomMeshes_Mesh(const IRhRdkCustomRenderMeshes* pMeshes, int index)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CustomMeshes_Mesh(IntPtr pMeshes, int index);

  //bool Rdk_CustomMeshes_Sphere(const IRhRdkCustomRenderMeshes* pMeshes, int index, ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis, double* radius)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_Sphere(IntPtr pMeshes, int index, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double radius);

  //bool Rdk_CustomMeshes_Box(const IRhRdkCustomRenderMeshes* pMeshes, 
  //										int index, ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis, 
  //										double* minX, double* maxX, double* minY, double* maxY, double* minZ, double* maxZ)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_Box(IntPtr pMeshes, int index, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double minX, ref double maxX, ref double minY, ref double maxY, ref double minZ, ref double maxZ);

  //bool Rdk_CustomMeshes_Plane(const IRhRdkCustomRenderMeshes* pMeshes, 
  //									      int index, ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis, 
  //										  double* minX, double* maxX, double* minY, double* maxY)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_Plane(IntPtr pMeshes, int index, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double minX, ref double maxX, ref double minY, ref double maxY);

  //bool Rdk_CustomMeshes_Cone(const IRhRdkCustomRenderMeshes* pMeshes, 
  //                                        int index, ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis, 
  //                                        double* height, double* radius,
  //                                        ON_3dPoint* t_origin, ON_3dVector* t_xaxis, ON_3dVector* t_yaxis)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_Cone(IntPtr pMeshes, int index, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double height, ref double radius, ref Point3d t_origin, ref Vector3d t_xaxis, ref Vector3d t_yaxis);

  //const CRhRdkMaterial* Rdk_CustomMeshes_Material(const IRhRdkCustomRenderMeshes* pMeshes, int index)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CustomMeshes_Material(IntPtr pMeshes, int index);

  //const CRhinoObject* Rdk_CustomMeshes_Object(const IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CustomMeshes_Object(IntPtr pMeshes);

  //bool Rdk_CustomMeshes_GetInstanceTransform(const IRhRdkCustomRenderMeshes* pMeshes, int index, ON_Xform* pXformInstance)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_GetInstanceTransform(IntPtr pMeshes, int index, ref Transform pXformInstance);

  //void Rdk_CustomMeshes_SetInstanceTransform(IRhRdkCustomRenderMeshes* pMeshes, int index, ON_XFORM_STRUCT xform)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_SetInstanceTransform(IntPtr pMeshes, int index, Transform xform);

  //void Rdk_CustomMeshes_ConvertMeshesToTriangles(IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_ConvertMeshesToTriangles(IntPtr pMeshes);

  //void Rdk_CustomMeshes_Delete(IRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_Delete(IntPtr pMeshes);

  //void Rdk_CustomMeshes_Clear(CRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CustomMeshes_Clear(IntPtr pMeshes);

  //bool Rdk_CustomMeshes_AutoDeleteMeshesOn(const CRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_AutoDeleteMeshesOn(IntPtr pMeshes);

  //bool Rdk_CustomMeshes_AutoDeleteMaterialsOn(const CRhRdkCustomRenderMeshes* pMeshes)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CustomMeshes_AutoDeleteMaterialsOn(IntPtr pMeshes);

  //void Rdk_CRMManager_Changed()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_CRMManager_Changed();

  //void* Rdk_CRMManager_EVF(RHMONO_STRING* _s, void* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_CRMManager_EVF([MarshalAs(UnmanagedType.LPWStr)]string _s, IntPtr p);

  //bool Rdk_CRMManager_WillBuildCustomMeshSole(const ON_Viewport* pVP, const CRhinoObject* pObject, ON_UUID requestingPlugIn, bool preview, ON_UUID soleProviderId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_WillBuildCustomMeshSole(IntPtr pVP, IntPtr pObject, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview, Guid soleProviderId);

  //bool Rdk_CRMManager_WillBuildCustomMesh(const ON_Viewport* pVP, const CRhinoObject* pObject, ON_UUID requestingPlugIn, bool preview)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_WillBuildCustomMesh(IntPtr pVP, IntPtr pObject, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview);

  //bool Rdk_CRMManager_BoundingBoxSole(const ON_Viewport* pVP, const CRhinoObject* pObject, 
  //												  ON_UUID requestingPlugIn, bool preview, ON_UUID soleProviderId, ON_3dPoint* min, ON_3dPoint* max)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_BoundingBoxSole(IntPtr pVP, IntPtr pObject, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview, Guid soleProviderId, ref Point3d min, ref Point3d max);

  //bool Rdk_CRMManager_BoundingBox(const ON_Viewport* pVP, const CRhinoObject* pObject, 
  //												  ON_UUID requestingPlugIn, bool preview, ON_3dPoint* min, ON_3dPoint* max)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_BoundingBox(IntPtr pVP, IntPtr pObject, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview, ref Point3d min, ref Point3d max);

  //bool Rdk_CRMManager_BuildCustomMeshesSole(const ON_Viewport* pVP, IRhRdkCustomRenderMeshes* pMeshes, ON_UUID requestingPlugIn, bool preview, ON_UUID soleProviderId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_BuildCustomMeshesSole(IntPtr pVP, IntPtr pMeshes, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview, Guid soleProviderId);

  //bool Rdk_CRMManager_BuildCustomMeshes(const ON_Viewport* pVP, IRhRdkCustomRenderMeshes* pMeshes, ON_UUID requestingPlugIn, bool preview)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_CRMManager_BuildCustomMeshes(IntPtr pVP, IntPtr pMeshes, Guid requestingPlugIn, [MarshalAs(UnmanagedType.U1)]bool preview);

  //void Rdk_SetCallback_CRMProvider_DeleteThis(RDK_CRMPROVIDERDELETETHISPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetCallback_CRMProvider_WillBuild(RDK_CRMPROVIDER_WILLBUILD_PROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetCallback_CRMProvider_BBox(RDK_CRMPROVIDER_BBOX_PROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetCallback_CRMProvider_Build(RDK_CRMPROVIDER_BUILD_PROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //CRhCmnCRMProvider* CRhCmnCRMProvider_New(int serial_number, ON_UUID providerId, RHMONO_STRING* _name, ON_UUID pluginId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhCmnCRMProvider_New(int serial_number, Guid providerId, [MarshalAs(UnmanagedType.LPWStr)]string _name, Guid pluginId);

  //void Rdk_RegisterCRMProvider(IRhRdkCustomRenderMeshProvider* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RegisterCRMProvider(IntPtr p);

  //bool Rdk_RMPBoundingBoxImpl(int serial_number,
  //													const ON_Viewport* pVP, 
  //													const CRhinoObject* pObject, 
  //													ON_UUID uuidRequestingPlugIn, 
  //													int type,
  //													ON_3dPoint* min,
  //													ON_3dPoint* max)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RMPBoundingBoxImpl(int serial_number, IntPtr pVP, IntPtr pObject, Guid uuidRequestingPlugIn, int type, ref Point3d min, ref Point3d max);
  #endregion


  #region rdk_decals.cpp
  //int Rdk_Decal_Id(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Decal_Id(IntPtr pDecal);

  //ON_UUID Rdk_Decal_TextureInstanceId(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Decal_TextureInstanceId(IntPtr pDecal);

  //int Rdk_Decal_Mapping(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Decal_Mapping(IntPtr pDecal);

  //int Rdk_Decal_Projection(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Decal_Projection(IntPtr pDecal);

  //int Rdk_Decal_MapToInside(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Decal_MapToInside(IntPtr pDecal);

  //double Rdk_Decal_Transparency(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_Transparency(IntPtr pDecal);

  //void Rdk_Decal_Origin(const IRhRdkDecal* pDecal, ON_3dPoint* pPoint)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decal_Origin(IntPtr pDecal, ref Point3d pPoint);

  //void Rdk_Decal_VectorUp(const IRhRdkDecal* pDecal, ON_3dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decal_VectorUp(IntPtr pDecal, ref Vector3d pVector);

  //void Rdk_Decal_VectorAcross(const IRhRdkDecal* pDecal, ON_3dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decal_VectorAcross(IntPtr pDecal, ref Vector3d pVector);

  //double Rdk_Decal_Height(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_Height(IntPtr pDecal);

  //double Rdk_Decal_Radius(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_Radius(IntPtr pDecal);

  //double Rdk_Decal_LatStart(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_LatStart(IntPtr pDecal);

  //double Rdk_Decal_LatEnd(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_LatEnd(IntPtr pDecal);

  //double Rdk_Decal_LonStart(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_LonStart(IntPtr pDecal);

  //double Rdk_Decal_LonEnd(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Decal_LonEnd(IntPtr pDecal);

  //void Rdk_Decal_UVBounds(const IRhRdkDecal* pDecal, double* pMinUOut, double* pMinVOut, double* pMaxUOut, double* pMaxVOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decal_UVBounds(IntPtr pDecal, ref double pMinUOut, ref double pMinVOut, ref double pMaxUOut, ref double pMaxVOut);

  //const IRhRdk_XMLSection* Rdk_Decal_CustomData(const IRhRdkDecal* pDecal)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Decal_CustomData(IntPtr pDecal);

  //int Rdk_Decal_Color(const IRhRdkDecal* pDecal, ON_3DPOINT_STRUCT point, ON_3DVECTOR_STRUCT normal, ON_4fPoint* pColInOut, ON_2dPoint* pUvOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Decal_Color(IntPtr pDecal, Point3d point, Vector3d normal, ref Color4f pColInOut, ref Point2d pUvOut);

  //CRhRdkDecalIterator* Rdk_Decals_NewDecalIterator(ON_UUID uuidObject)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Decals_NewDecalIterator(Guid uuidObject);

  //const IRhRdkDecal* Rdk_Decals_Next(CRhRdkDecalIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Decals_Next(IntPtr pIt);

  //void Rdk_Decals_ResetIterator(CRhRdkDecalIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decals_ResetIterator(IntPtr pIt);

  //void Rdk_Decals_DeleteDecalIterator(CRhRdkDecalIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Decals_DeleteDecalIterator(IntPtr pIt);
  #endregion


  #region rdk_environment.cpp
  //void Rdk_SetSimulateEnvironmentCallback(RDK_SIMULATEENVIRONMENTPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //int CRhCmnEnvironment_New(int serial_number, bool image_based, ON_UUID render_engine_id, ON_UUID plugin_id, ON_UUID type_id, int category)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnEnvironment_New(int serial_number, [MarshalAs(UnmanagedType.U1)]bool image_based, Guid render_engine_id, Guid plugin_id, Guid type_id, int category);

  //void Rdk_RenderEnvironment_CallSimulateEnvironmentBase(CRhRdkEnvironment* pEnvironment, CRhRdkSimulatedEnvironment* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderEnvironment_CallSimulateEnvironmentBase(IntPtr pEnvironment, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);

  //void Rdk_RenderEnvironment_SimulateEnvironment(CRhRdkEnvironment* pEnvironment, CRhRdkSimulatedEnvironment* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderEnvironment_SimulateEnvironment(IntPtr pEnvironment, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);

  //CRhRdkContent* Rdk_RenderEnvironment_CurrentEnvironment(int doc_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderEnvironment_CurrentEnvironment(int doc_id);

  //void Rdk_RenderEnvironment_SetCurrentEnvironment(int doc_id, ON_UUID uuidInstanceId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderEnvironment_SetCurrentEnvironment(int doc_id, Guid uuidInstanceId);
  #endregion


  #region rdk_eventsink.cpp
  //void CRdkCmnEventWatcher_LogState( const RHMONO_STRING* _str )
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRdkCmnEventWatcher_LogState([MarshalAs(UnmanagedType.LPWStr)]string _str);

  //void CRdkCmnEventWatcher_SetContentAddedEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentRenamedEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentDeletingEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentReplacingEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentReplacedEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentChangedEventCallback(CONTENTCHANGEDEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentUpdatePreviewEventCallback(CONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentCurrencyChangedEventCallback(CURRENTCONTENTEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentListClearingEventCallback(TWOINTSEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentListClearedEventCallback(TWOINTSEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetContentListLoadedEventCallback(TWOINTSEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetNewRdkDocumentEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetGlobalSettingsChangedEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetUpdateAllPreviewsEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetCacheImageChangedEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetRendererChangedEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetCustomRenderMeshesChangedEventCallback(VOIDPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetFactoryAddedEventCallback(UUIDEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetFactoryDeletingEventCallback(UUIDEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetFactoryDeletedEventCallback(TWOINTSEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetClientPlugInUnloadingEventCallback(UUIDEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRdkCmnEventWatcher_SetDocumentSettingsChangedEventCallback(TWOINTSEVENTPROC cep, RDKREPORTPROC report)
  // SKIPPING - Contains a function pointer which needs to be written by hand
  #endregion


  #region rdk_groundplane.cpp
  //bool Rdk_GroundPlane_Enabled()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_GroundPlane_Enabled();

  //void Rdk_GroundPlane_SetEnabled(bool v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetEnabled([MarshalAs(UnmanagedType.U1)]bool v);

  //double Rdk_GroundPlane_Altitude()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_GroundPlane_Altitude();

  //void Rdk_GroundPlane_SetAltitude(double v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetAltitude(double v);

  //ON_UUID Rdk_GroundPlane_MaterialInstanceId()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_GroundPlane_MaterialInstanceId();

  //void Rdk_GroundPlane_SetMaterialInstanceId(ON_UUID v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetMaterialInstanceId(Guid v);

  //void Rdk_GroundPlane_TextureOffset(ON_2dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_TextureOffset(ref Vector2d pVector);

  //void Rdk_GroundPlane_SetTextureOffset(ON_2DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetTextureOffset(Vector2d v);

  //void Rdk_GroundPlane_TextureSize(ON_2dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_TextureSize(ref Vector2d pVector);

  //void Rdk_GroundPlane_SetTextureSize(ON_2DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetTextureSize(Vector2d v);

  //double Rdk_GroundPlane_TextureRotation()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_GroundPlane_TextureRotation();

  //void Rdk_GroundPlane_SetTextureRotation(double v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_GroundPlane_SetTextureRotation(double v);
  #endregion


  #region rdk_material.cpp
  //void Rdk_SetTextureChildSlotNameCallback(RDK_TEXTURECHILDSLOTNAMEPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetSimulateMaterialCallback(RDK_SIMULATEMATERIALPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //int CRhCmnMaterial_New(int serial_number, bool image_based, ON_UUID render_engine_id, ON_UUID plugin_id, ON_UUID type_id, int category)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnMaterial_New(int serial_number, [MarshalAs(UnmanagedType.U1)]bool image_based, Guid render_engine_id, Guid plugin_id, Guid type_id, int category);

  //void Rdk_RenderMaterial_CallTextureChildSlotNameBase(CRhRdkMaterial* pMaterial, CRhCmnStringHolder* pSH, int which)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMaterial_CallTextureChildSlotNameBase(IntPtr pMaterial, IntPtr pSH, int which);

  //void Rdk_RenderMaterial_CallSimulateMaterialBase(CRhRdkMaterial* pMaterial, ON_Material* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMaterial_CallSimulateMaterialBase(IntPtr pMaterial, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);

  //void Rdk_RenderMaterial_SimulateMaterial(CRhRdkMaterial* pMaterial, ON_Material* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMaterial_SimulateMaterial(IntPtr pMaterial, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);
  #endregion


  #region rdk_plugin.cpp
  //int Rdk_LoadTest()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_LoadTest();

  //void Rdk_SetNewTextureCallback(RDK_NEWTEXTUREPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetNewMaterialCallback(RDK_NEWMATERIALPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetNewEnvironmentCallback(RDK_NEWENVIRONMENTPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void CRhinoRenderPlugIn_SetRdkCallbacks(SUPPORTSFEATUREPROC sf, 
  //													  ABORTRENDERPROC ar, 
  //													  ALLOWCHOOSECONTENTPROC acc, 
  //													  CREATEDEFAULTCONTENTPROC cdc,
  //													  OUTPUTTYPESPROC ot,
  //													  CREATETEXTUREPREVIEWPROC tp,
  //													  CREATEPREVIEWPROC cp,
  //													  DECALPROC dp,
  //                            REGISTERCONTENTIOPLUGINSPROC io)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //int Rdk_RenderPlugIn_BaseOutputTypeAtIndex(CRhinoRenderPlugIn* pPlugIn, int iIndex, CRhCmnStringHolder* pSH_Ext, CRhCmnStringHolder* pSH_Desc)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderPlugIn_BaseOutputTypeAtIndex(IntPtr pPlugIn, int iIndex, IntPtr pSH_Ext, IntPtr pSH_Desc);

  //CRhRdkPlugIn* CRhCmnRdkPlugIn_New( CRhinoPlugIn* pRhinoPlugIn, int serial_number)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhCmnRdkPlugIn_New(IntPtr pRhinoPlugIn, int serial_number);

  //void CRhCmnRdkPlugIn_Delete(CRhRdkPlugIn* pRdkPlugIn)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void CRhCmnRdkPlugIn_Delete(IntPtr pRdkPlugIn);

  //void Rdk_AddTextureFactory(ON_UUID content_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_AddTextureFactory(Guid content_id);

  //void Rdk_AddMaterialFactory(ON_UUID content_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_AddMaterialFactory(Guid content_id);

  //void Rdk_AddEnvironmentFactory(ON_UUID content_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_AddEnvironmentFactory(Guid content_id);

  //ON_UUID Rdk_MaterialFromOnMaterial(const ON_Material* pMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_MaterialFromOnMaterial(IntPtr pMaterial);

  //void Rdk_SetMaterialToOnMaterial(ON_Material* pMaterial, ON_UUID uuid)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SetMaterialToOnMaterial(IntPtr pMaterial, Guid uuid);

  //int Rdk_Globals_ShowColorPicker(HWND hWnd, ON_4FVECTOR_STRUCT v, bool bUseAlpha, ON_4fPoint* pColor)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_ShowColorPicker(IntPtr hWnd, Color4f v, [MarshalAs(UnmanagedType.U1)]bool bUseAlpha, ref Color4f pColor);

  //int Rdk_Globals_ShowIncompatibleContent(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_ShowIncompatibleContent([MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //void Rdk_Globals_SetShowIncompatbileContent(const RHMONO_STRING* _ps, bool bShow)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Globals_SetShowIncompatbileContent([MarshalAs(UnmanagedType.LPWStr)]string _ps, [MarshalAs(UnmanagedType.U1)]bool bShow);

  //int Rdk_Globals_IsSafeFrameVisible()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_IsSafeFrameVisible();

  //int Rdk_Globals_IsGroundPlaneVisible()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_IsGroundPlaneVisible();

  //CRhRdkMaterial* Rdk_Globals_NewBasicMaterial(const ON_Material* pONMaterial)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_NewBasicMaterial(IntPtr pONMaterial);

  //CRhRdkEnvironment* Rdk_Globals_NewBasicEnvironment(const CRhRdkSimulatedEnvironment* pONEnv)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_NewBasicEnvironment(IntPtr pONEnv);

  //CRhRdkTexture* Rdk_Globals_NewBasicTexture(const CRhRdkSimulatedTexture* pON)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_NewBasicTexture(IntPtr pON);

  //int Rdk_Globals_ChooseContentEx(ON_UUID* pInstanceId, const RHMONO_STRING* _ps, int flags, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_ChooseContentEx(ref Guid pInstanceId, [MarshalAs(UnmanagedType.LPWStr)]string _ps, int flags, int docId);

  //CRhRdkContent* Rdk_Globals_CreateContentByType(ON_UUID type, 
  //															 CRhRdkContent* pParent, 
  //															 const RHMONO_STRING* _pCSN, 
  //															 int flags, 
  //															 int doc_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_CreateContentByType(Guid type, IntPtr pParent, [MarshalAs(UnmanagedType.LPWStr)]string _pCSN, int flags, int doc_id);

  //CRhRdkContent* Rdk_Globals_CreateContentByUser(ON_UUID defaultType, 
  //															 ON_UUID defaultInstance, 
  //															 const RHMONO_STRING* _ps, int flags, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_CreateContentByUser(Guid defaultType, Guid defaultInstance, [MarshalAs(UnmanagedType.LPWStr)]string _ps, int flags, int docId);

  //int Rdk_Globals_PromptForSaveImageFileParams(const RHMONO_STRING* _ps, 
  //														   int* pWidth, 
  //														   int* pHeight, 
  //														   int* pColorDepth, 
  //														   CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_PromptForSaveImageFileParams([MarshalAs(UnmanagedType.LPWStr)]string _ps, ref int pWidth, ref int pHeight, ref int pColorDepth, IntPtr pSH);

  //int Rdk_Globals_ShowContentChooser(ON_UUID defaultType, 
  //												 ON_UUID defaultInstanceId, 
  //												 const RHMONO_STRING* _ps, 
  //												 ON_UUID* pInstanceIdOut,
  //												 int flags, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_ShowContentChooser(Guid defaultType, Guid defaultInstanceId, [MarshalAs(UnmanagedType.LPWStr)]string _ps, ref Guid pInstanceIdOut, int flags, int docId);

  //CRhRdkContent* Rdk_Globals_ChangeContentType(CRhRdkContent* pOldContent, ON_UUID newType, bool harvestParameters)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Globals_ChangeContentType(IntPtr pOldContent, Guid newType, [MarshalAs(UnmanagedType.U1)]bool harvestParameters);

  //CRhRdkContent* Rdk_RenderContent_LoadPersistantContentFromFile(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_LoadPersistantContentFromFile([MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //CRhRdkContent* Rdk_RenderContent_LoadContentFromFile(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderContent_LoadContentFromFile([MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //int Rdk_Globals_AddPersistentContent(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_AddPersistentContent(IntPtr pContent);

  //int Rdk_Globals_FindFile(const RHMONO_STRING* _ps, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_FindFile([MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pSH);

  //int Rdk_Globals_IsCachedTextureFileInUse(const RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Globals_IsCachedTextureFileInUse([MarshalAs(UnmanagedType.LPWStr)]string _ps);
  #endregion


  #region rdk_protoonenvironment.cpp
  //CRhRdkSimulatedEnvironment* Rdk_SimulatedEnvironment_New()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SimulatedEnvironment_New();

  //void Rdk_SimulatedEnvironment_Delete(CRhRdkSimulatedEnvironment* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedEnvironment_Delete(IntPtr p);

  //const CRhRdkSimulatedTexture* Rdk_SimulatedEnvironment_Texture(CRhRdkSimulatedEnvironment* pEnvironment)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SimulatedEnvironment_Texture(IntPtr pEnvironment);

  //int Rdk_SimulatedEnvironment_BackgroundColor(CRhRdkSimulatedEnvironment* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedEnvironment_BackgroundColor(IntPtr p);

  //void Rdk_SimulatedEnvironment_SetBackgroundColor(CRhRdkSimulatedEnvironment* p, int c)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedEnvironment_SetBackgroundColor(IntPtr p, int c);

  //void Rdk_SimulatedEnvironment_SetBackgroundImage(CRhRdkSimulatedEnvironment* p, CRhRdkSimulatedTexture* pTexture)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedEnvironment_SetBackgroundImage(IntPtr p, IntPtr pTexture);

  //int Rdk_SimulatedEnvironment_BackgroundProjection(CRhRdkSimulatedEnvironment* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedEnvironment_BackgroundProjection(IntPtr p);

  //void Rdk_SimulatedEnvironment_SetBackgroundProjection(CRhRdkSimulatedEnvironment* p, int i)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedEnvironment_SetBackgroundProjection(IntPtr p, int i);

  //int Rdk_SimulatedEnvironment_ProjectionFromString(const RHMONO_STRING* _p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedEnvironment_ProjectionFromString([MarshalAs(UnmanagedType.LPWStr)]string _p);

  //void Rdk_SimulatedTexture_StringFromProjection(CRhCmnStringHolder* pSH, int proj)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_StringFromProjection(IntPtr pSH, int proj);

  //int Rdk_SimulatedEnvironment_AutomaticProjectionFromChildTexture(ON_UUID uuidInstanceId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedEnvironment_AutomaticProjectionFromChildTexture(Guid uuidInstanceId);
  #endregion


  #region rdk_renderpluginiterator.cpp
  //CRhRdkRenderPlugInIterator* Rdk_RenderPlugInInfo_New()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderPlugInInfo_New();

  //int Rdk_RenderPlugInInfo(CRhRdkRenderPlugInIterator* p, ON_UUID* pUuid, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderPlugInInfo(IntPtr p, ref Guid pUuid, IntPtr pSH);

  //void Rdk_RenderPlugInInfo_Delete(CRhRdkRenderPlugInIterator* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderPlugInInfo_Delete(IntPtr p);
  #endregion


  #region rdk_sceneserver.cpp
  //void Rdk_SceneServer_ResetObjectEnum(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SceneServer_ResetObjectEnum(IntPtr pSS);

  //void Rdk_SceneServer_ResetLightEnum(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SceneServer_ResetLightEnum(IntPtr pSS);

  //const IRhRdkPreviewSceneServer::IObject* Rdk_SceneServer_NextObject(IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SceneServer_NextObject(IntPtr pSS);

  //const CRhRdkMaterial* Rdk_SceneServer_ObjectDetails(const IRhRdkPreviewSceneServer::IObject* pSSObject, ON_Mesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SceneServer_ObjectDetails(IntPtr pSSObject, IntPtr pMesh);

  //const IRhRdkPreviewSceneServer::ILight* Rdk_SceneServer_NextLight(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SceneServer_NextLight(IntPtr pSS);

  //void Rdk_SceneServer_LightDetails(const IRhRdkPreviewSceneServer::ILight* pSSLight, ON_Light* pOnLight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SceneServer_LightDetails(IntPtr pSSLight, IntPtr pOnLight);

  //const CRhRdkEnvironment* Rdk_SceneServer_Environment(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SceneServer_Environment(IntPtr pSS);

  //ON_UUID Rdk_SceneServer_InstanceId(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_SceneServer_InstanceId(IntPtr pSS);

  //int Rdk_SceneServer_Signature(const IRhRdkPreviewSceneServer* pSS)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SceneServer_Signature(IntPtr pSS);

  //int Rdk_SceneServer_View(const IRhRdkPreviewSceneServer* pSS, ON_Viewport* pView)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SceneServer_View(IntPtr pSS, IntPtr pView);
  #endregion


  #region rdk_sdkrender.cpp
  //IRhRdkSdkRenderMeshIterator* Rdk_RenderMeshIterator_New(ON_UUID plugInId, bool needTriangleMesh, const ON_Viewport* pVP)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMeshIterator_New(Guid plugInId, [MarshalAs(UnmanagedType.U1)]bool needTriangleMesh, IntPtr pVP);

  //int Rdk_RenderMesh_PrimitiveType(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_PrimitiveType(IntPtr pMesh);

  //const CRhinoObject* Rdk_RenderMesh_Object(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMesh_Object(IntPtr pMesh);

  //const ON_Mesh* Rdk_RenderMesh_Mesh(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMesh_Mesh(IntPtr pMesh);

  //int Rdk_RenderMesh_Sphere(const CRhRdkRenderMesh* pMesh, ON_3dPoint* pCenter, double* pRadius)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_Sphere(IntPtr pMesh, ref Point3d pCenter, ref double pRadius);

  //int Rdk_RenderMesh_Box(const CRhRdkRenderMesh* pMesh, 
  //										                 ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis, 
  //										                 double* minX, double* maxX, double* minY, double* maxY, double* minZ, double* maxZ)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_Box(IntPtr pMesh, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double minX, ref double maxX, ref double minY, ref double maxY, ref double minZ, ref double maxZ);

  //int Rdk_RenderMesh_Plane(const CRhRdkRenderMesh* pMesh,
  //                                        ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis,
  //                                        double* minX, double* maxX, double* minY, double* maxY)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_Plane(IntPtr pMesh, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double minX, ref double maxX, ref double minY, ref double maxY);

  //int Rdk_RenderMesh_Cone(const CRhRdkRenderMesh* pMesh, 
  //                                      ON_3dPoint* origin, ON_3dVector* xaxis, ON_3dVector* yaxis,
  //                                      double* height, double* radius,
  //                                      ON_3dPoint* t_origin, ON_3dVector* t_xaxis, ON_3dVector* t_yaxis)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_Cone(IntPtr pMesh, ref Point3d origin, ref Vector3d xaxis, ref Vector3d yaxis, ref double height, ref double radius, ref Point3d t_origin, ref Vector3d t_xaxis, ref Vector3d t_yaxis);

  //void Rdk_RenderMesh_XformInstance(const CRhRdkRenderMesh* pMesh, ON_Xform* pXform)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMesh_XformInstance(IntPtr pMesh, ref Transform pXform);

  //int Rdk_RenderMesh_IsRdkMaterial(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMesh_IsRdkMaterial(IntPtr pMesh);

  //const CRhRdkMaterial* Rdk_RenderMesh_RdkMaterial(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMesh_RdkMaterial(IntPtr pMesh);

  //const ON_Material* Rdk_RenderMesh_OnMaterial(const CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMesh_OnMaterial(IntPtr pMesh);

  //void Rdk_RenderMesh_BoundingBox(const CRhRdkRenderMesh* pMesh, ON_3dPoint* min, ON_3dPoint* max)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMesh_BoundingBox(IntPtr pMesh, ref Point3d min, ref Point3d max);

  //void Rdk_RenderMeshIterator_EnsureRenderMeshesCreated(IRhRdkSdkRenderMeshIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMeshIterator_EnsureRenderMeshesCreated(IntPtr pIt);

  //void Rdk_RenderMeshIterator_SceneBoundingBox(IRhRdkSdkRenderMeshIterator* pIt, ON_3dPoint* min, ON_3dPoint* max)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMeshIterator_SceneBoundingBox(IntPtr pIt, ref Point3d min, ref Point3d max);

  //int Rdk_RenderMeshIterator_SupportsAutomaticInstancing(IRhRdkSdkRenderMeshIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMeshIterator_SupportsAutomaticInstancing(IntPtr pIt);

  //void Rdk_RenderMeshIterator_Delete(IRhRdkSdkRenderMeshIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMeshIterator_Delete(IntPtr pIt);

  //CRhRdkRenderMesh* Rdk_RenderMesh_New()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderMesh_New();

  //int Rdk_RenderMeshIterator_Next(IRhRdkSdkRenderMeshIterator* pIt, CRhRdkRenderMesh* pMesh)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderMeshIterator_Next(IntPtr pIt, IntPtr pMesh);

  //void Rdk_RenderMeshIterator_Reset(IRhRdkSdkRenderMeshIterator* pIt)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderMeshIterator_Reset(IntPtr pIt);

  //void Rdk_SetSdkRenderCallback(RDK_SDKRENDERPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //CRhRdkSdkRender* Rdk_SdkRender_New(int serial_number, const CRhinoCommandContext* pCommandContext, 
  //														 CRhinoRenderPlugIn* pPlugIn, 
  //														 const RHMONO_STRING* _pCaption, 
  //														 bool bReuseRenderWindow, 
  //														 bool bClearLastRendering)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SdkRender_New(int serial_number, IntPtr pCommandContext, IntPtr pPlugIn, [MarshalAs(UnmanagedType.LPWStr)]string _pCaption, [MarshalAs(UnmanagedType.U1)]bool bReuseRenderWindow, [MarshalAs(UnmanagedType.U1)]bool bClearLastRendering);

  //void Rdk_RenderWindow_Initialize(CRhRdkSdkRender* pSdkRender, int channels, int iWidth, int iHeight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_Initialize(IntPtr pSdkRender, int channels, int iWidth, int iHeight);

  //void Rdk_SdkRender_Delete(CRhRdkSdkRender* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SdkRender_Delete(IntPtr p);

  //int Rdk_SdkRender_Render(CRhRdkSdkRender* pSdkRender, int iHeight, int iWidth)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SdkRender_Render(IntPtr pSdkRender, int iHeight, int iWidth);

  //int Rdk_SdkRender_RenderWindow(CRhRdkSdkRender* pSdkRender, CRhinoView* pView, int iTop, int iLeft, int iBottom, int iRight, bool bInWindow)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SdkRender_RenderWindow(IntPtr pSdkRender, IntPtr pView, int iTop, int iLeft, int iBottom, int iRight, [MarshalAs(UnmanagedType.U1)]bool bInWindow);

  //void Rdk_SdkRender_RenderSize(int* piWidth, int* piHeight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SdkRender_RenderSize(ref int piWidth, ref int piHeight);

  //void Rdk_SdkRender_SetConfirmationSeconds(CRhRdkSdkRender* pSdkRender, int i)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SdkRender_SetConfirmationSeconds(IntPtr pSdkRender, int i);

  //IRhRdkRenderWindow* Rdk_SdkRender_GetRenderWindow(CRhRdkSdkRender* pSdkRender)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SdkRender_GetRenderWindow(IntPtr pSdkRender);

  //ON_UUID Rdk_RenderWindow_StandardChannelId(int ch)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_RenderWindow_StandardChannelId(int ch);

  //void Rdk_RenderWindow_Size(IRhRdkRenderWindow* pWindow, int* piWidth, int* piHeight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_Size(IntPtr pWindow, ref int piWidth, ref int piHeight);

  //void Rdk_RenderWindow_SetSize(IRhRdkRenderWindow* pWindow, int width, int height)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_SetSize(IntPtr pWindow, int width, int height);

  //void Rdk_RenderWindow_SetProgress(IRhRdkRenderWindow* pWindow, const RHMONO_STRING* _ps, int iPC)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_SetProgress(IntPtr pWindow, [MarshalAs(UnmanagedType.LPWStr)]string _ps, int iPC);

  //IRhRdkRenderWindow::IChannel* Rdk_RenderWindow_OpenChannel(IRhRdkRenderWindow* pWindow, int id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderWindow_OpenChannel(IntPtr pWindow, int id);

  //bool Rdk_RenderWindow_AddChannel(IRhRdkRenderWindow* pWindow, const ON_UUID* uuidChannel, unsigned int pixelSize)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderWindow_AddChannel(IntPtr pWindow, ref Guid uuidChannel, uint pixelSize);

  //bool Rdk_RenderWindow_AddWireframeChannel(IRhRdkRenderWindow* pWindow, int rhinoDocId, const ON_Viewport* constPointerToON_Viewport, int* xy, int* lrtb)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderWindow_AddWireframeChannel(IntPtr pWindow, int rhinoDocId, IntPtr constPointerToON_Viewport, ref int xy, ref int lrtb);

  //int Rdk_RenderWindowChannel_PixelSize(IRhRdkRenderWindow::IChannel* pChannel)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderWindowChannel_PixelSize(IntPtr pChannel);

  //void Rdk_RenderWindowChannel_SetFloatValue(IRhRdkRenderWindow::IChannel* pChannel, int x, int y, float value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindowChannel_SetFloatValue(IntPtr pChannel, int x, int y, float value);

  //void Rdk_RenderWindowChannel_SetValueRect(IRhRdkRenderWindow::IChannel* pChannel, int x, int y, int width, int height, /*ARRAY*/const ON_4FVECTOR_STRUCT* colors)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindowChannel_SetValueRect(IntPtr pChannel, int x, int y, int width, int height, Color4f[] colors);

  //void Rdk_RenderWindowChannel_SetColorValue(IRhRdkRenderWindow::IChannel* pChannel, int x, int y, ON_4FVECTOR_STRUCT value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindowChannel_SetColorValue(IntPtr pChannel, int x, int y, Color4f value);

  //void Rdk_RenderWindowChannel_Close(IRhRdkRenderWindow::IChannel* pChannel)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindowChannel_Close(IntPtr pChannel);

  //void Rdk_RenderWindow_Invalidate(IRhRdkRenderWindow* pWindow)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_Invalidate(IntPtr pWindow);

  //void Rdk_RenderWindow_InvalidateArea(IRhRdkRenderWindow* pWindow, int top, int left, int bottom, int right)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderWindow_InvalidateArea(IntPtr pWindow, int top, int left, int bottom, int right);
  #endregion


  #region rdk_simulatedtexture.cpp
  //CRhRdkSimulatedTexture* Rdk_SimulatedTexture_New()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SimulatedTexture_New();

  //void Rdk_SimulatedTexture_Delete(CRhRdkSimulatedTexture* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_Delete(IntPtr p);

  //void Rdk_SimulatedTexture_LocalMappingTransform(CRhRdkSimulatedTexture* pSim, ON_Xform* pXform)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_LocalMappingTransform(IntPtr pSim, ref Transform pXform);

  //void Rdk_SimulatedTexture_Filename(CRhRdkSimulatedTexture* pSim, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_Filename(IntPtr pSim, IntPtr pSH);

  //void Rdk_SimulatedTexture_SetFilename(CRhRdkSimulatedTexture* pSim, const RHMONO_STRING* _pFilename)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetFilename(IntPtr pSim, [MarshalAs(UnmanagedType.LPWStr)]string _pFilename);

  //void Rdk_SimulatedTexture_OriginalFilename(CRhRdkSimulatedTexture* pSim, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_OriginalFilename(IntPtr pSim, IntPtr pSH);

  //void Rdk_SimulatedTexture_Repeat(CRhRdkSimulatedTexture* pSim, ON_2dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_Repeat(IntPtr pSim, ref Vector2d pVector);

  //void Rdk_SimulatedTexture_SetRepeat(CRhRdkSimulatedTexture* pSim, ON_2DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetRepeat(IntPtr pSim, Vector2d v);

  //void Rdk_SimulatedTexture_Offset(CRhRdkSimulatedTexture* pSim, ON_2dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_Offset(IntPtr pSim, ref Vector2d pVector);

  //void Rdk_SimulatedTexture_SetOffset(CRhRdkSimulatedTexture* pSim, ON_2DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetOffset(IntPtr pSim, Vector2d v);

  //double Rdk_SimulatedTexture_Rotation(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_SimulatedTexture_Rotation(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetRotation(CRhRdkSimulatedTexture* pSim, double v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetRotation(IntPtr pSim, double v);

  //bool Rdk_SimulatedTexture_Repeating(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_SimulatedTexture_Repeating(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetRepeating(CRhRdkSimulatedTexture* pSim, bool v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetRepeating(IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool v);

  //int Rdk_SimulatedTexture_MappingChannel(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedTexture_MappingChannel(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetMappingChannel(CRhRdkSimulatedTexture* pSim, int v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetMappingChannel(IntPtr pSim, int v);

  //int Rdk_SimulatedTexture_ProjectionMode(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedTexture_ProjectionMode(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetProjectionMode(CRhRdkSimulatedTexture* pSim, int v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetProjectionMode(IntPtr pSim, int v);

  //bool Rdk_SimulatedTexture_HasTransparentColor(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_SimulatedTexture_HasTransparentColor(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetHasTransparentColor(CRhRdkSimulatedTexture* pSim, bool v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetHasTransparentColor(IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool v);

  //void Rdk_SimulatedTexture_TransparentColor(CRhRdkSimulatedTexture* pSim, ON_4fPoint* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_TransparentColor(IntPtr pSim, ref Color4f p);

  //void Rdk_SimulatedTexture_SetTransparentColor(CRhRdkSimulatedTexture* pSim, ON_4FVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetTransparentColor(IntPtr pSim, Color4f v);

  //double Rdk_SimulatedTexture_TransparentColorSensitivity(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_SimulatedTexture_TransparentColorSensitivity(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetTransparentColorSensitivity(CRhRdkSimulatedTexture* pSim, double v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetTransparentColorSensitivity(IntPtr pSim, double v);

  //bool Rdk_SimulatedTexture_Filtered(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_SimulatedTexture_Filtered(IntPtr pSim);

  //void Rdk_SimulatedTexture_SetFiltered(CRhRdkSimulatedTexture* pSim, bool v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetFiltered(IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool v);

  //double Rdk_SimulatedTexture_UnitsToMeters(CRhRdkSimulatedTexture* pSim, double d)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_SimulatedTexture_UnitsToMeters(IntPtr pSim, double d);

  //double Rdk_SimulatedTexture_MetersToUnits(CRhRdkSimulatedTexture* pSim, double d)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_SimulatedTexture_MetersToUnits(IntPtr pSim, double d);

  //ON_Texture* Rdk_SimulatedTexture_OnTexturePointer(CRhRdkSimulatedTexture* pSim)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SimulatedTexture_OnTexturePointer(IntPtr pSim);

  //int Rdk_SimulatedTexture_TextureSize()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_SimulatedTexture_TextureSize();

  //void Rdk_SimulatedTexture_SetTextureSize(int iSize)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SimulatedTexture_SetTextureSize(int iSize);
  #endregion


  #region rdk_sun.cpp
  //CRhRdkSun* Rdk_SunNew()
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SunNew();

  //void Rdk_SunDelete(CRhRdkSun* pSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_SunDelete(IntPtr pSun);

  //const IRhRdkSun* Rdk_SunInterface(const CRhRdkSun* pConstSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_SunInterface(IntPtr pConstSun);

  //const IRhRdkSun* Rdk_DocSunInterface(int doc_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_DocSunInterface(int doc_id);

  //const CRhRdkDocSun* Rdk_DocSun(int doc_id)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_DocSun(int doc_id);

  //bool Rdk_Sun_Enabled(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_Enabled(IntPtr pConstISun);

  //void Rdk_Sun_SetEnabled(IRhRdkSun* pISun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetEnabled(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool b);

  //bool Rdk_Sun_EnableAllowed(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_EnableAllowed(IntPtr pConstISun);

  //void Rdk_Sun_SetEnableAllowed(IRhRdkSun* pISun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetEnableAllowed(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool b);

  //bool Rdk_Sun_ManualControlAllowed(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_ManualControlAllowed(IntPtr pConstISun);

  //void Rdk_Sun_SetManualControlAllowed(IRhRdkSun* pISun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetManualControlAllowed(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool b);

  //bool Rdk_Sun_ManualControlOn(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_ManualControlOn(IntPtr pConstISun);

  //void Rdk_Sun_SetManualControlOn(IRhRdkSun* pISun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetManualControlOn(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool b);

  //double Rdk_Sun_North(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_North(IntPtr pConstISun);

  //void Rdk_Sun_SetNorth(IRhRdkSun* pISun, double d)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetNorth(IntPtr pISun, double d);

  //void Rdk_Sun_Vector(const IRhRdkSun* pConstISun, ON_3dVector* pVector)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_Vector(IntPtr pConstISun, ref Vector3d pVector);

  //void Rdk_Sun_SetVector(IRhRdkSun* pISun, ON_3DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetVector(IntPtr pISun, Vector3d v);

  //double Rdk_Sun_Azimuth(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_Azimuth(IntPtr pConstISun);

  //void Rdk_Sun_SetAzimuthAltitude(IRhRdkSun* pISun, double azimuth, double altitude)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetAzimuthAltitude(IntPtr pISun, double azimuth, double altitude);

  //double Rdk_Sun_Altitude(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_Altitude(IntPtr pConstISun);

  //double Rdk_Sun_Latitude(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_Latitude(IntPtr pConstISun);

  //void Rdk_Sun_SetLatitudeLongitude(IRhRdkSun* pISun, double latitude, double longitude)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetLatitudeLongitude(IntPtr pISun, double latitude, double longitude);

  //double Rdk_Sun_Longitude(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_Longitude(IntPtr pConstISun);

  //double Rdk_Sun_TimeZone(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_TimeZone(IntPtr pConstISun);

  //void Rdk_Sun_SetTimeZone(IRhRdkSun* pISun, double d)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetTimeZone(IntPtr pISun, double d);

  //bool Rdk_Sun_DaylightSavingOn(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_DaylightSavingOn(IntPtr pConstISun);

  //void Rdk_Sun_SetDaylightSavingOn(IRhRdkSun* pISun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetDaylightSavingOn(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool b);

  //int Rdk_Sun_DaylightSavingMinutes(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Sun_DaylightSavingMinutes(IntPtr pConstISun);

  //void Rdk_Sun_SetDaylightSavingMinutes(IRhRdkSun* pISun, int i)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetDaylightSavingMinutes(IntPtr pISun, int i);

  //void Rdk_Sun_LocalDateTime(const IRhRdkSun* pConstISun, 
  //										 int* piYearOut, int* piMonthOut, int* piDayOut, 
  //										 int* piHoursOut, int* piMinutesOut, int* piSecondsOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_LocalDateTime(IntPtr pConstISun, ref int piYearOut, ref int piMonthOut, ref int piDayOut, ref int piHoursOut, ref int piMinutesOut, ref int piSecondsOut);

  //void Rdk_Sun_SetDateTime(IRhRdkSun* pISun, bool local,
  //											int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetDateTime(IntPtr pISun, [MarshalAs(UnmanagedType.U1)]bool local, int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds);

  //void Rdk_Sun_UTCDateTime(const IRhRdkSun* pConstISun, 
  //										 int* piYearOut, int* piMonthOut, int* piDayOut, 
  //										 int* piHoursOut, int* piMinutesOut, int* piSecondsOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_UTCDateTime(IntPtr pConstISun, ref int piYearOut, ref int piMonthOut, ref int piDayOut, ref int piHoursOut, ref int piMinutesOut, ref int piSecondsOut);

  //void Rdk_Sun_Light(const IRhRdkSun* pConstISun, ON_Light* pLight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_Light(IntPtr pConstISun, IntPtr pLight);

  //unsigned int Rdk_Sun_CRC(const IRhRdkSun* pConstISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern uint Rdk_Sun_CRC(IntPtr pConstISun);

  //void Rdk_Sun_ShowDialog(IRhRdkSun* pISun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_ShowDialog(IntPtr pISun);

  //bool Rdk_Sun_SkylightOn(const CRhRdkDocSun* pConstDocSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_SkylightOn(IntPtr pConstDocSun);

  //void Rdk_Sun_SetSkylightOn(CRhRdkDocSun* pDocSun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetSkylightOn(IntPtr pDocSun, [MarshalAs(UnmanagedType.U1)]bool b);

  //double Rdk_Sun_SkylightShadowIntensity(const CRhRdkDocSun* pConstDocSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Sun_SkylightShadowIntensity(IntPtr pConstDocSun);

  //void Rdk_Sun_SetSkylightShadowIntensity(CRhRdkDocSun* pDocSun, double d)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetSkylightShadowIntensity(IntPtr pDocSun, double d);

  //bool Rdk_Sun_SkylightCustomEnvironmentOn(const CRhRdkDocSun* pConstDocSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_SkylightCustomEnvironmentOn(IntPtr pConstDocSun);

  //void Rdk_Sun_SetSkylightCustomEnvironmentOn(CRhRdkDocSun* pDocSun, bool b)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetSkylightCustomEnvironmentOn(IntPtr pDocSun, [MarshalAs(UnmanagedType.U1)]bool b);

  //ON_UUID Rdk_Sun_SkylightCustomEnvironment(const CRhRdkDocSun* pConstDocSun)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Sun_SkylightCustomEnvironment(IntPtr pConstDocSun);

  //void Rdk_Sun_SetSkylightCustomEnvironment(CRhRdkDocSun* pDocSun, ON_UUID uuid)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SetSkylightCustomEnvironment(IntPtr pDocSun, Guid uuid);

  //bool Rdk_Sun_IsSunLight(ON_Light* pLight)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_Sun_IsSunLight(IntPtr pLight);

  //void Rdk_Sun_SunDirection(double latitude, double longitude, bool local, int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds, ON_3dVector* direction)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Sun_SunDirection(double latitude, double longitude, [MarshalAs(UnmanagedType.U1)]bool local, int iYear, int iMonth, int iDay, int iHours, int iMinutes, int iSeconds, ref Vector3d direction);
  #endregion


  #region rdk_texture.cpp
  //void Rdk_SetNewTextureEvaluatorCallback(RDK_NEWTEXTUREEVALUATORPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_SetSimulateTextureCallback(RDK_SIMULATETEXTUREPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void RdkSetTextureGetVirtualIntCallback(RDK_TEXTUREGETVIRTUALINTPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void RdkSetTextureSetVirtualIntCallback(RDK_TEXTURESETVIRTUALINTPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void RdkSetTextureGetVirtualVector3dCallback(RDK_TEXTUREGETVIRTUAL3DVECTORPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void RdkSetTextureSetVirtualVector3dCallback(RDK_TEXTURESETVIRTUAL3DVECTORPROC proc)
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //void Rdk_RenderTexture_GetVirtual3dVector(const CRhCmnTexture* texture, int propertyId, bool fromBaseClass, ON_3dVector* vectorOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_GetVirtual3dVector(IntPtr texture, int propertyId, [MarshalAs(UnmanagedType.U1)]bool fromBaseClass, ref Vector3d vectorOut);

  //void Rdk_RenderTexture_SetVirtual3dVector(CRhCmnTexture* texture, int propertyId, bool callBaseClass, ON_3DVECTOR_STRUCT value, int changeContext)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_SetVirtual3dVector(IntPtr texture, int propertyId, [MarshalAs(UnmanagedType.U1)]bool callBaseClass, Vector3d value, int changeContext);

  //int Rdk_RenderTexture_GetVirtualIntValue(const CRhCmnTexture* texture, int propertyId, bool fromBaseClass)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderTexture_GetVirtualIntValue(IntPtr texture, int propertyId, [MarshalAs(UnmanagedType.U1)]bool fromBaseClass);

  //void Rdk_RenderTexture_SetVirtualIntValue(CRhCmnTexture* texture, int propertyId, bool callBaseClass, int value, int changeContext)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_SetVirtualIntValue(IntPtr texture, int propertyId, [MarshalAs(UnmanagedType.U1)]bool callBaseClass, int value, int changeContext);

  //int CRhCmnTexture_New(int serial_number, bool image_based, ON_UUID render_engine_id, ON_UUID plugin_id, ON_UUID type_id, int category)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnTexture_New(int serial_number, [MarshalAs(UnmanagedType.U1)]bool image_based, Guid render_engine_id, Guid plugin_id, Guid type_id, int category);

  //void Rdk_RenderTexture_AddTwoColorSection(CRhRdkContent* pContent)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_AddTwoColorSection(IntPtr pContent);

  //void Rdk_RenderTexture_LocalMappingTransform(CRhRdkTexture* pTex, ON_Xform* pXform)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_LocalMappingTransform(IntPtr pTex, ref Transform pXform);

  //IRhRdkTextureEvaluator* Rdk_RenderTexture_NewTextureEvaluator(CRhRdkTexture* pTex)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_RenderTexture_NewTextureEvaluator(IntPtr pTex);

  //void Rdk_RenderTexture_CallSimulateTextureBase(CRhRdkTexture* pTexture, CRhRdkSimulatedTexture* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_CallSimulateTextureBase(IntPtr pTexture, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);

  //void Rdk_RenderTexture_SimulateTexture(CRhRdkTexture* pTexture, CRhRdkSimulatedTexture* pSim, bool bForDataDec)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_SimulateTexture(IntPtr pTexture, IntPtr pSim, [MarshalAs(UnmanagedType.U1)]bool bForDataDec);

  //int Rdk_RenderTexture_InternalEnvironmentMappingMode(const CRhRdkTexture* pTexture)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderTexture_InternalEnvironmentMappingMode(IntPtr pTexture);

  //void Rdk_RenderTexture_SetEnvironmentMappingMode(CRhRdkTexture* pTexture, int value, int changeContext)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_SetEnvironmentMappingMode(IntPtr pTexture, int value, int changeContext);

  //int Rdk_RenderTexture_GetIntValue(const CRhCmnTexture* texture, int propertyId, int errorValue)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_RenderTexture_GetIntValue(IntPtr texture, int propertyId, int errorValue);

  //void Rdk_RenderTexture_SetIntValue(CRhCmnTexture* texture, int propertyId, int value, int changeContext)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_SetIntValue(IntPtr texture, int propertyId, int value, int changeContext);

  //bool Rdk_RenderTexture_EnvironmentMappingProjection(int mode, ON_3DVECTOR_STRUCT reflectionVector, float* u, float* v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_RenderTexture_EnvironmentMappingProjection(int mode, Vector3d reflectionVector, ref float u, ref float v);

  //void Rdk_RenderTexture_WcsBoxMapping(ON_3DPOINT_STRUCT worldXYZ, ON_3DVECTOR_STRUCT normal, ON_3dPoint* pointOut)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_RenderTexture_WcsBoxMapping(Point3d worldXYZ, Vector3d normal, ref Point3d pointOut);
  #endregion


  #region rdk_textureevaluator.cpp
  //void Rdk_SetTextureEvaluatorCallbacks( RDK_GETCOLORPROC cb, RDK_TEXTUREEVALDELETETHISPROC deletethis_cb )
  // SKIPPING - Contains a function pointer which needs to be written by hand

  //CRhCmnTextureEvaluator* CRhCmnRdkTextureEvaluator_New(int serial_number)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr CRhCmnRdkTextureEvaluator_New(int serial_number);

  //int CRhCmnRdkTextureEvaluator_IsRhCmnEvaluator(const IRhRdkTextureEvaluator* pConstTextureEvaluator)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int CRhCmnRdkTextureEvaluator_IsRhCmnEvaluator(IntPtr pConstTextureEvaluator);

  //bool Rdk_TextureEvaluator_GetColor(const IRhRdkTextureEvaluator* pConstTextureEvaluator, ON_3DPOINT_STRUCT uvw, ON_3DVECTOR_STRUCT duvwdx, ON_3DVECTOR_STRUCT duvwdy, ON_4fPoint* color)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  [return: MarshalAs(UnmanagedType.U1)]
  internal static extern bool Rdk_TextureEvaluator_GetColor(IntPtr pConstTextureEvaluator, Point3d uvw, Vector3d duvwdx, Vector3d duvwdy, ref Color4f color);

  //void Rdk_TextureEvaluator_DeleteThis(IRhRdkTextureEvaluator* pTextureEvaluator)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_TextureEvaluator_DeleteThis(IntPtr pTextureEvaluator);
  #endregion


  #region rdk_variant.cpp
  //CRhRdkVariant* Rdk_Variant_New(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_Variant_New(IntPtr pV);

  //void Rdk_Variant_Copy(const CRhRdkVariant* pConstSourceVariant, CRhRdkVariant* pDestVariant)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_Copy(IntPtr pConstSourceVariant, IntPtr pDestVariant);

  //int Rdk_Variant_GetUnits(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetUnits(IntPtr pV);

  //void Rdk_Variant_SetUnits(CRhRdkVariant* pV, int value)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetUnits(IntPtr pV, int value);

  //int Rdk_Variant_IsNull(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_IsNull(IntPtr pV);

  //void Rdk_Variant_SetNull(CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetNull(IntPtr pV);

  //int Rdk_Variant_Varies(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_Varies(IntPtr pV);

  //void Rdk_Variant_SetVaries(CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetVaries(IntPtr pV);

  //int Rdk_Variant_Type(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_Type(IntPtr pV);

  //void Rdk_Variant_SetIntValue(CRhRdkVariant* pV, int v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetIntValue(IntPtr pV, int v);

  //void Rdk_Variant_SetBoolValue(CRhRdkVariant* pV, bool v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetBoolValue(IntPtr pV, [MarshalAs(UnmanagedType.U1)]bool v);

  //void Rdk_Variant_SetDoubleValue(CRhRdkVariant* pV, double v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetDoubleValue(IntPtr pV, double v);

  //void Rdk_Variant_SetFloatValue(CRhRdkVariant* pV, float v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetFloatValue(IntPtr pV, float v);

  //void Rdk_Variant_SetStringValue(CRhRdkVariant* pV, RHMONO_STRING* _ps)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetStringValue(IntPtr pV, [MarshalAs(UnmanagedType.LPWStr)]string _ps);

  //void Rdk_Variant_SetOnColorValue(CRhRdkVariant* pV, int v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetOnColorValue(IntPtr pV, int v);

  //void Rdk_Variant_SetRdkColorValue(CRhRdkVariant* pV, ON_4FVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetRdkColorValue(IntPtr pV, Color4f v);

  //void Rdk_Variant_Set2dVectorValue(CRhRdkVariant* pV, ON_2DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_Set2dVectorValue(IntPtr pV, Vector2d v);

  //void Rdk_Variant_Set3dVectorValue(CRhRdkVariant* pV, ON_3DVECTOR_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_Set3dVectorValue(IntPtr pV, Vector3d v);

  //void Rdk_Variant_Set4dPointValue(CRhRdkVariant* pV, ON_4DPOINT_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_Set4dPointValue(IntPtr pV, Point4d v);

  //void Rdk_Variant_SetUuidValue(CRhRdkVariant* pV, ON_UUID v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetUuidValue(IntPtr pV, Guid v);

  //void Rdk_Variant_SetXformValue(CRhRdkVariant* pV, ON_XFORM_STRUCT v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetXformValue(IntPtr pV, Transform v);

  //void Rdk_Variant_SetByteArrayValue(CRhRdkVariant* pV, /*ARRAY*/const char* buffer, int sizeOfBuffer)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetByteArrayValue(IntPtr pV, byte[] buffer, int sizeOfBuffer);

  //void Rdk_Variant_SetTimeValue(CRhRdkVariant* pV, time_t v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetTimeValue(IntPtr pV, Int64 v);

  //int Rdk_Variant_GetIntValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetIntValue(IntPtr pV);

  //int Rdk_Variant_GetBoolValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetBoolValue(IntPtr pV);

  //double Rdk_Variant_GetDoubleValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Variant_GetDoubleValue(IntPtr pV);

  //float Rdk_Variant_GetFloatValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern float Rdk_Variant_GetFloatValue(IntPtr pV);

  //int Rdk_Variant_GetStringValue(const CRhRdkVariant* pV, CRhCmnStringHolder* pSH)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetStringValue(IntPtr pV, IntPtr pSH);

  //int Rdk_Variant_GetOnColorValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetOnColorValue(IntPtr pV);

  //int Rdk_Variant_GetRdkColorValue(const CRhRdkVariant* pV, ON_4fPoint* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetRdkColorValue(IntPtr pV, ref Color4f p);

  //int Rdk_Variant_Get2dVectorValue(const CRhRdkVariant* pV, ON_2dVector* v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_Get2dVectorValue(IntPtr pV, ref Vector2d v);

  //int Rdk_Variant_Get3dVectorValue(const CRhRdkVariant* pV, ON_3dVector* v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_Get3dVectorValue(IntPtr pV, ref Vector3d v);

  //int Rdk_Variant_Get4dPointValue(const CRhRdkVariant* pV, ON_4dPoint* v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_Get4dPointValue(IntPtr pV, ref Point4d v);

  //ON_UUID Rdk_Variant_GetUuidValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Guid Rdk_Variant_GetUuidValue(IntPtr pV);

  //int Rdk_Variant_GetXformValue(const CRhRdkVariant* pV, ON_Xform* v)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_Variant_GetXformValue(IntPtr pV, ref Transform v);

  //time_t Rdk_Variant_GetTimeValue(const CRhRdkVariant* pV)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern Int64 Rdk_Variant_GetTimeValue(IntPtr pV);

  //float Rdk_Variant_AsModelFloat(const CRhRdkVariant* pV, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern float Rdk_Variant_AsModelFloat(IntPtr pV, int docId);

  //double Rdk_Variant_AsModelDouble(const CRhRdkVariant* pV, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern double Rdk_Variant_AsModelDouble(IntPtr pV, int docId);

  //void Rdk_Variant_SetAsModelFloat(CRhRdkVariant* pV, float f, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetAsModelFloat(IntPtr pV, float f, int docId);

  //void Rdk_Variant_SetAsModelDouble(CRhRdkVariant* pV, double d, int docId)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_SetAsModelDouble(IntPtr pV, double d, int docId);

  //void Rdk_Variant_Delete(CRhRdkVariant* p)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_Variant_Delete(IntPtr p);

  //IRhRdk_XMLSection::Iterator* Rdk_XmlSection_GetIterator(IRhRdk_XMLSection* pSection)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern IntPtr Rdk_XmlSection_GetIterator(IntPtr pSection);

  //int Rdk_XmlSection_NextParam(IRhRdk_XMLSection* pSection, 
  //										   IRhRdk_XMLSection::Iterator* pIterator, 
  //										   CRhCmnStringHolder* pSH, 
  //										   CRhRdkVariant* pVariant)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_XmlSection_NextParam(IntPtr pSection, IntPtr pIterator, IntPtr pSH, IntPtr pVariant);

  //int Rdk_XmlSection_SetParam(IRhRdk_XMLSection* pSection, const RHMONO_STRING* _ps, const CRhRdkVariant* pVariant)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern int Rdk_XmlSection_SetParam(IntPtr pSection, [MarshalAs(UnmanagedType.LPWStr)]string _ps, IntPtr pVariant);

  //void Rdk_XmlSection_DeleteIterator(IRhRdk_XMLSection* pXmlSection)
  [DllImport(Import.librdk, CallingConvention=CallingConvention.Cdecl )]
  internal static extern void Rdk_XmlSection_DeleteIterator(IntPtr pXmlSection);
  #endregion


}
